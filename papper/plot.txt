# Load necessary libraries
library(ggplot2)
library(dplyr)

# Create original data for individual tasks
data <- data.frame(
  Task = c("Grasp Lid", "Close Lid", "Cube 1", "Cube 2", "Pick Red Ring", "Insert Red Ring"),
  Success = c(8, 10, 10, 10, 10, 9),
  TaskType = c("Wooden Box Closing", "Wooden Box Closing", "Cube Stacking", "Cube Stacking", "Insert Red Ring Task", "Insert Red Ring Task")
)

# Create a factor with ordered levels to ensure the plot orders the groups correctly
data$TaskType <- factor(data$TaskType, levels = c("Wooden Box Closing", "Cube Stacking", "Insert Red Ring Task"))

# Adding hypothetical variability data for error bars
data$Success_SD <- c(0.5, 0.3, 0.4, 0.2, 0.1, 0.6)  # Standard deviation for each task

# Convert success rates to percentages
data <- data %>%
  mutate(Success_Percent = Success / 10 * 100,
         Success_SD_Percent = Success_SD / 10 * 100,
         Success_Upper = Success_Percent + Success_SD_Percent,
         Success_Lower = Success_Percent - Success_SD_Percent)

# Create a more advanced and stylish plot
p <- ggplot(data, aes(x = Task, y = Success_Percent, color = TaskType, group = TaskType)) +
  geom_point(size = 5, alpha = 0.8) +  # Larger points with slight transparency
  geom_ribbon(aes(ymin = Success_Lower, ymax = Success_Upper, fill = TaskType), alpha = 0.3, color = NA) + # Shaded region for variability
  geom_line(linetype = "dashed", size = 1.2) +  # Dashed line connecting points within each TaskType
  scale_color_manual(values = c("#4C72B0", "#55A868", "#C44E52")) +  # Custom color palette for points and lines
  scale_fill_manual(values = c("#4C72B0", "#55A868", "#C44E52")) + # Custom color palette for the shaded region
  labs(
    title = "Task Success Rates by Group with Variability",
    subtitle = "Success rates of sub-tasks within each group, showing trends and variability",
    x = "Task",  # Changed x-axis label
    y = "Success Rate (%)",
    color = "Task Group",  # Changed legend title for points and lines
    fill = "Task Group"    # Legend title for shaded region
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
    plot.subtitle = element_text(size = 14, hjust = 0.5),
    axis.text.x = element_text(angle = 45, hjust = 1, face = "bold", size = 12),
    axis.title.x = element_text(size = 14, face = "bold"),
    axis.title.y = element_text(size = 14, face = "bold"),
    legend.title = element_text(size = 14, face = "bold"),
    legend.text = element_text(size = 12),
    panel.grid.minor = element_line(color = "gray95", size = 0.5),
    panel.grid.major = element_line(color = "gray90", size = 0.6)
  ) +
  facet_wrap(~ TaskType, scales = "free_x") + # Facet by TaskType
  geom_text(data = subset(data, TaskType == "Wooden Box Closing"),
            aes(x = 1.5, y = 110, label = "Simulated"),
            color = "#C44E52", size = 5, fontface = "bold") +
  geom_text(data = subset(data, TaskType == "Cube Stacking"),
            aes(x = 1.5, y = 110, label = "Simulated"),
            color = "#C44E52", size = 5, fontface = "bold") +
  geom_text(data = subset(data, TaskType == "Insert Red Ring Task"),
            aes(x = 1.5, y = 110, label = "Real World"),
            color = "#C44E52", size = 5, fontface = "bold") # Add annotation for specific TaskType

# Print the plot
print(p)

